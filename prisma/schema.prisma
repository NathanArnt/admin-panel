generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid()) @db.VarChar(191)
  userId             String  @map("user_id")
  type               String  @db.VarChar(50) // Limité à 50 caractères
  provider           String  @db.VarChar(50) // Limité à 50 caractères
  providerAccountId  String  @db.VarChar(100) @map("provider_account_id") // Limité à 100 caractères
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String? @db.VarChar(50) // Limité à 50 caractères
  scope              String? @db.VarChar(100) // Limité à 100 caractères
  id_token           String? @db.Text 
  session_state      String? @db.VarChar(100) // Limité à 100 caractères

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId]) // Index composite
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid()) @db.VarChar(191)
  sessionToken String   @unique @map("session_token") @db.VarChar(100) // Limité à 100 caractères
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}
enum UserRole {
  USER
  ADMIN
}

model User {
  id            String    @id @default(cuid()) @db.VarChar(191)
  name          String?   @db.VarChar(100) // Limité à 100 caractères
  email         String?   @unique @db.VarChar(191)
  emailVerified DateTime? @map("email_verified")
  password      String? @db.VarChar(100)
  image         String?   @db.VarChar(255) // Limité à 255 caractères (standard pour URL)
  role          UserRole? @default(USER) 
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String @db.VarChar(100) // Limité à 100 caractères
  token      String @db.VarChar(100) // Limité à 100 caractères
  expires    DateTime

  @@unique([identifier, token]) // Index composite
  @@map("verification_tokens")
}